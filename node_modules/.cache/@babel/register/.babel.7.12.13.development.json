{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\",\"filename\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\\\\gulpfile.babel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Jiyeong\\Desktop\\supergulp",
      "filename": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\gulpfile.babel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jiyeong\\Desktop\\supergulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\gulpfile.babel.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dev = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//만약 src를 변경했다고 해보자! \n//콘솔창에 yarn add del 을 사용하여 삭제! \nvar routes = {\n  pug: {\n    watch: \"src/**/*.pug\",\n    //src는 index.pug가 되기 위해 src/*.pug라고 지정하였지만,\n    //partials 폴더 안의 footer, header.pug가 변화되는 것도 지켜봐야하므로,\n    //watch에는 src/**/*/.pug로 지정하였다.\n    src: \"src/*.pug\",\n    //폴더의 안쪽폴더 파일까지 건드리고 싶다면 src/**/*.pug를 입력할것! //\n    dest: \"build\" //dest(destination)은 \"build\"다! \n\n  },\n  img: {\n    src: \"src/img/*\",\n    //img 파일에 있는 모든 파일들!\n    dest: \"build/img\"\n  }\n}; //pug는 src에 있고, 이 안의 .pug로 끝나는 모든 파일들을 컴파일하자! \n\nvar pug = function pug() {\n  return _gulp[\"default\"].src(routes.pug.src).pipe((0, _gulpPug[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.pug.dest));\n}; //gulp의 dest(destination)! 종착점이 dest인 \"build\"인거야! \n\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"build/\"]);\n}; //속성이 변할때를 대비해 먼저 초기화하고 build 폴더를 생성한다.\n//export const clean = () => del(\"build\")\n//clean이라는 변수는 del\"build\"라는 것을 지운다.\n\n\nvar webserver = function webserver() {\n  return _gulp[\"default\"].src(\"build\").pipe((0, _gulpWebserver[\"default\"])({\n    livereload: true,\n    open: true\n  }));\n}; //livereload는 파일을 저장하면 자동으로 새로고침해준다.\n\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch(routes.pug.watch, pug); //변수routes안에 pug의 watch가 변수pug를 지켜본다.\n\n\n  _gulp[\"default\"].watch(routes.img.src, img);\n};\n\nvar img = function img() {\n  return _gulp[\"default\"].src(routes.img.src).pipe((0, _gulpImage[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.img.dest));\n};\n\nvar prepare = _gulp[\"default\"].series([clean, img]);\n\nvar assets = _gulp[\"default\"].series([pug]);\n\nvar postDev = _gulp[\"default\"].parallel([webserver, watch]); //postDev는 웹서버를 실행하고, 파일의 변동사항을 지켜보는 역할을 한다.\n//parallel은 두가지를 병행하여 실행하게끔 한다.\n\n\nvar dev = _gulp[\"default\"].series([prepare, assets, postDev]); //먼저 clean을 통해 build 폴더를 지우고 , pug를 적용!            \n//만약 clean을 exprot 하지 않는다면, 콘솔이나 package.json에서 사용하지 못한다.\n\n\nexports.dev = dev;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInJvdXRlcyIsInB1ZyIsIndhdGNoIiwic3JjIiwiZGVzdCIsImltZyIsImd1bHAiLCJwaXBlIiwiY2xlYW4iLCJ3ZWJzZXJ2ZXIiLCJsaXZlcmVsb2FkIiwib3BlbiIsInByZXBhcmUiLCJzZXJpZXMiLCJhc3NldHMiLCJwb3N0RGV2IiwicGFyYWxsZWwiLCJkZXYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBO0FBQ0E7QUFFQSxJQUFNQSxNQUFNLEdBQUc7QUFDWEMsRUFBQUEsR0FBRyxFQUFFO0FBQ0RDLElBQUFBLEtBQUssRUFBRSxjQUROO0FBRUQ7QUFDQTtBQUNBO0FBQ0FDLElBQUFBLEdBQUcsRUFBRSxXQUxKO0FBTUQ7QUFDQUMsSUFBQUEsSUFBSSxFQUFFLE9BUEwsQ0FRRDs7QUFSQyxHQURNO0FBV1hDLEVBQUFBLEdBQUcsRUFBRTtBQUNERixJQUFBQSxHQUFHLEVBQUUsV0FESjtBQUVEO0FBQ0FDLElBQUFBLElBQUksRUFBRTtBQUhMO0FBWE0sQ0FBZixDLENBa0JBOztBQUdBLElBQU1ILEdBQUcsR0FBRyxTQUFOQSxHQUFNO0FBQUEsU0FDUkssaUJBQ0NILEdBREQsQ0FDS0gsTUFBTSxDQUFDQyxHQUFQLENBQVdFLEdBRGhCLEVBRUNJLElBRkQsQ0FFTSwwQkFGTixFQUdDQSxJQUhELENBR01ELGlCQUFLRixJQUFMLENBQVVKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXRyxJQUFyQixDQUhOLENBRFE7QUFBQSxDQUFaLEMsQ0FLQTs7O0FBRUEsSUFBTUksS0FBSyxHQUFHLFNBQVJBLEtBQVE7QUFBQSxTQUFNLHFCQUFJLENBQUMsUUFBRCxDQUFKLENBQU47QUFBQSxDQUFkLEMsQ0FDQTtBQUNBO0FBQ0E7OztBQUVBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZO0FBQUEsU0FDZEgsaUJBQUtILEdBQUwsQ0FBUyxPQUFULEVBQWtCSSxJQUFsQixDQUF1QiwrQkFBRztBQUN0QkcsSUFBQUEsVUFBVSxFQUFFLElBRFU7QUFFdEJDLElBQUFBLElBQUksRUFBRTtBQUZnQixHQUFILENBQXZCLENBRGM7QUFBQSxDQUFsQixDLENBS0E7OztBQUVBLElBQU1ULEtBQUssR0FBRyxTQUFSQSxLQUFRLEdBQU07QUFDaEJJLG1CQUFLSixLQUFMLENBQVdGLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXQyxLQUF0QixFQUE2QkQsR0FBN0IsRUFEZ0IsQ0FFaEI7OztBQUNBSyxtQkFBS0osS0FBTCxDQUFXRixNQUFNLENBQUNLLEdBQVAsQ0FBV0YsR0FBdEIsRUFBMkJFLEdBQTNCO0FBQ0gsQ0FKRDs7QUFNQSxJQUFNQSxHQUFHLEdBQUcsU0FBTkEsR0FBTTtBQUFBLFNBQ1JDLGlCQUNDSCxHQURELENBQ0tILE1BQU0sQ0FBQ0ssR0FBUCxDQUFXRixHQURoQixFQUVDSSxJQUZELENBRU0sNEJBRk4sRUFHQ0EsSUFIRCxDQUdNRCxpQkFBS0YsSUFBTCxDQUFVSixNQUFNLENBQUNLLEdBQVAsQ0FBV0QsSUFBckIsQ0FITixDQURRO0FBQUEsQ0FBWjs7QUFNQSxJQUFNUSxPQUFPLEdBQUdOLGlCQUFLTyxNQUFMLENBQVksQ0FBQ0wsS0FBRCxFQUFRSCxHQUFSLENBQVosQ0FBaEI7O0FBRUEsSUFBTVMsTUFBTSxHQUFHUixpQkFBS08sTUFBTCxDQUFZLENBQUNaLEdBQUQsQ0FBWixDQUFmOztBQUVBLElBQU1jLE9BQU8sR0FBR1QsaUJBQUtVLFFBQUwsQ0FBYyxDQUFDUCxTQUFELEVBQVlQLEtBQVosQ0FBZCxDQUFoQixDLENBQ0E7QUFDQTs7O0FBRU8sSUFBTWUsR0FBRyxHQUFHWCxpQkFBS08sTUFBTCxDQUFZLENBQUNELE9BQUQsRUFBVUUsTUFBVixFQUFrQkMsT0FBbEIsQ0FBWixDQUFaLEMsQ0FDUDtBQUNBIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSml5ZW9uZ1xcRGVza3RvcFxcc3VwZXJndWxwXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tIFwiZ3VscFwiO1xyXG5pbXBvcnQgZ3B1ZyBmcm9tIFwiZ3VscC1wdWdcIlxyXG5pbXBvcnQgZGVsIGZyb20gXCJkZWxcIjtcclxuaW1wb3J0IHdzIGZyb20gXCJndWxwLXdlYnNlcnZlclwiO1xyXG5pbXBvcnQgaW1hZ2UgZnJvbSBcImd1bHAtaW1hZ2VcIjtcclxuXHJcbi8v66eM7JW9IHNyY+ulvCDrs4Dqsr3tlojri6Tqs6Ag7ZW067O07J6QISBcclxuLy/svZjshpTssL3sl5AgeWFybiBhZGQgZGVsIOydhCDsgqzsmqntlZjsl6wg7IKt7KCcISBcclxuXHJcbmNvbnN0IHJvdXRlcyA9IHtcclxuICAgIHB1Zzoge1xyXG4gICAgICAgIHdhdGNoOiBcInNyYy8qKi8qLnB1Z1wiLFxyXG4gICAgICAgIC8vc3Jj64qUIGluZGV4LnB1Z+qwgCDrkJjquLAg7JyE7ZW0IHNyYy8qLnB1Z+udvOqzoCDsp4DsoJXtlZjsmIDsp4Drp4wsXHJcbiAgICAgICAgLy9wYXJ0aWFscyDtj7TrjZQg7JWI7J2YIGZvb3RlciwgaGVhZGVyLnB1Z+qwgCDrs4DtmZTrkJjripQg6rKD64+EIOyngOy8nOu0kOyVvO2VmOuvgOuhnCxcclxuICAgICAgICAvL3dhdGNo7JeQ64qUIHNyYy8qKi8qLy5wdWfroZwg7KeA7KCV7ZWY7JiA64ukLlxyXG4gICAgICAgIHNyYzogXCJzcmMvKi5wdWdcIixcclxuICAgICAgICAvL+2PtOuNlOydmCDslYjsqr3tj7TrjZQg7YyM7J286rmM7KeAIOqxtOuTnOumrOqzoCDsi7bri6TrqbQgc3JjLyoqLyoucHVn66W8IOyeheugpe2VoOqygyEgLy9cclxuICAgICAgICBkZXN0OiBcImJ1aWxkXCJcclxuICAgICAgICAvL2Rlc3QoZGVzdGluYXRpb24p7J2AIFwiYnVpbGRcIuuLpCEgXHJcbiAgICB9LFxyXG4gICAgaW1nOiB7XHJcbiAgICAgICAgc3JjOiBcInNyYy9pbWcvKlwiLFxyXG4gICAgICAgIC8vaW1nIO2MjOydvOyXkCDsnojripQg66qo65OgIO2MjOydvOuTpCFcclxuICAgICAgICBkZXN0OiBcImJ1aWxkL2ltZ1wiXHJcblxyXG4gICAgfVxyXG59O1xyXG4vL3B1Z+uKlCBzcmPsl5Ag7J6I6rOgLCDsnbQg7JWI7J2YIC5wdWfroZwg64Gd64KY64qUIOuqqOuToCDtjIzsnbzrk6TsnYQg7Lu07YyM7J287ZWY7J6QISBcclxuXHJcblxyXG5jb25zdCBwdWcgPSAoKSA9PlxyXG4gICAgZ3VscFxyXG4gICAgLnNyYyhyb3V0ZXMucHVnLnNyYylcclxuICAgIC5waXBlKGdwdWcoKSlcclxuICAgIC5waXBlKGd1bHAuZGVzdChyb3V0ZXMucHVnLmRlc3QpKTtcclxuLy9ndWxw7J2YIGRlc3QoZGVzdGluYXRpb24pISDsooXssKnsoJDsnbQgZGVzdOyduCBcImJ1aWxkXCLsnbjqsbDslbwhIFxyXG5cclxuY29uc3QgY2xlYW4gPSAoKSA9PiBkZWwoW1wiYnVpbGQvXCJdKTtcclxuLy/sho3shLHsnbQg67OA7ZWg65WM66W8IOuMgOu5hO2VtCDrqLzsoIAg7LSI6riw7ZmU7ZWY6rOgIGJ1aWxkIO2PtOuNlOulvCDsg53shLHtlZzri6QuXHJcbi8vZXhwb3J0IGNvbnN0IGNsZWFuID0gKCkgPT4gZGVsKFwiYnVpbGRcIilcclxuLy9jbGVhbuydtOudvOuKlCDrs4DsiJjripQgZGVsXCJidWlsZFwi652864qUIOqyg+ydhCDsp4DsmrTri6QuXHJcblxyXG5jb25zdCB3ZWJzZXJ2ZXIgPSAoKSA9PlxyXG4gICAgZ3VscC5zcmMoXCJidWlsZFwiKS5waXBlKHdzKHtcclxuICAgICAgICBsaXZlcmVsb2FkOiB0cnVlLFxyXG4gICAgICAgIG9wZW46IHRydWVcclxuICAgIH0pKTtcclxuLy9saXZlcmVsb2Fk64qUIO2MjOydvOydhCDsoIDsnqXtlZjrqbQg7J6Q64+Z7Jy866GcIOyDiOuhnOqzoOy5qO2VtOykgOuLpC5cclxuXHJcbmNvbnN0IHdhdGNoID0gKCkgPT4ge1xyXG4gICAgZ3VscC53YXRjaChyb3V0ZXMucHVnLndhdGNoLCBwdWcpO1xyXG4gICAgLy/rs4DsiJhyb3V0ZXPslYjsl5AgcHVn7J2YIHdhdGNo6rCAIOuzgOyImHB1Z+ulvCDsp4DsvJzrs7jri6QuXHJcbiAgICBndWxwLndhdGNoKHJvdXRlcy5pbWcuc3JjLCBpbWcpO1xyXG59XHJcblxyXG5jb25zdCBpbWcgPSAoKSA9PlxyXG4gICAgZ3VscFxyXG4gICAgLnNyYyhyb3V0ZXMuaW1nLnNyYylcclxuICAgIC5waXBlKGltYWdlKCkpXHJcbiAgICAucGlwZShndWxwLmRlc3Qocm91dGVzLmltZy5kZXN0KSk7XHJcblxyXG5jb25zdCBwcmVwYXJlID0gZ3VscC5zZXJpZXMoW2NsZWFuLCBpbWddKTtcclxuXHJcbmNvbnN0IGFzc2V0cyA9IGd1bHAuc2VyaWVzKFtwdWddKTtcclxuXHJcbmNvbnN0IHBvc3REZXYgPSBndWxwLnBhcmFsbGVsKFt3ZWJzZXJ2ZXIsIHdhdGNoXSk7XHJcbi8vcG9zdERlduuKlCDsm7nshJzrsoTrpbwg7Iuk7ZaJ7ZWY6rOgLCDtjIzsnbzsnZgg67OA64+Z7IKs7ZWt7J2EIOyngOy8nOuztOuKlCDsl63tlaDsnYQg7ZWc64ukLlxyXG4vL3BhcmFsbGVs7J2AIOuRkOqwgOyngOulvCDrs5HtlontlZjsl6wg7Iuk7ZaJ7ZWY6rKM64GUIO2VnOuLpC5cclxuXHJcbmV4cG9ydCBjb25zdCBkZXYgPSBndWxwLnNlcmllcyhbcHJlcGFyZSwgYXNzZXRzLCBwb3N0RGV2XSk7XHJcbi8v66i87KCAIGNsZWFu7J2EIO2Gte2VtCBidWlsZCDtj7TrjZTrpbwg7KeA7Jqw6rOgICwgcHVn66W8IOyggeyaqSEgICAgICAgICAgICBcclxuLy/rp4zslb0gY2xlYW7snYQgZXhwcm90IO2VmOyngCDslYrripTri6TrqbQsIOy9mOyGlOydtOuCmCBwYWNrYWdlLmpzb27sl5DshJwg7IKs7Jqp7ZWY7KeAIOuqu+2VnOuLpC4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "gulp",
        "pipe",
        "clean",
        "webserver",
        "livereload",
        "open",
        "prepare",
        "series",
        "assets",
        "postDev",
        "parallel",
        "dev"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AACA;AAEA,IAAMA,MAAM,GAAG;AACXC,EAAAA,GAAG,EAAE;AACDC,IAAAA,KAAK,EAAE,cADN;AAED;AACA;AACA;AACAC,IAAAA,GAAG,EAAE,WALJ;AAMD;AACAC,IAAAA,IAAI,EAAE,OAPL,CAQD;;AARC,GADM;AAWXC,EAAAA,GAAG,EAAE;AACDF,IAAAA,GAAG,EAAE,WADJ;AAED;AACAC,IAAAA,IAAI,EAAE;AAHL;AAXM,CAAf,C,CAkBA;;AAGA,IAAMH,GAAG,GAAG,SAANA,GAAM;AAAA,SACRK,iBACCH,GADD,CACKH,MAAM,CAACC,GAAP,CAAWE,GADhB,EAECI,IAFD,CAEM,0BAFN,EAGCA,IAHD,CAGMD,iBAAKF,IAAL,CAAUJ,MAAM,CAACC,GAAP,CAAWG,IAArB,CAHN,CADQ;AAAA,CAAZ,C,CAKA;;;AAEA,IAAMI,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,QAAD,CAAJ,CAAN;AAAA,CAAd,C,CACA;AACA;AACA;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SACdH,iBAAKH,GAAL,CAAS,OAAT,EAAkBI,IAAlB,CAAuB,+BAAG;AACtBG,IAAAA,UAAU,EAAE,IADU;AAEtBC,IAAAA,IAAI,EAAE;AAFgB,GAAH,CAAvB,CADc;AAAA,CAAlB,C,CAKA;;;AAEA,IAAMT,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBI,mBAAKJ,KAAL,CAAWF,MAAM,CAACC,GAAP,CAAWC,KAAtB,EAA6BD,GAA7B,EADgB,CAEhB;;;AACAK,mBAAKJ,KAAL,CAAWF,MAAM,CAACK,GAAP,CAAWF,GAAtB,EAA2BE,GAA3B;AACH,CAJD;;AAMA,IAAMA,GAAG,GAAG,SAANA,GAAM;AAAA,SACRC,iBACCH,GADD,CACKH,MAAM,CAACK,GAAP,CAAWF,GADhB,EAECI,IAFD,CAEM,4BAFN,EAGCA,IAHD,CAGMD,iBAAKF,IAAL,CAAUJ,MAAM,CAACK,GAAP,CAAWD,IAArB,CAHN,CADQ;AAAA,CAAZ;;AAMA,IAAMQ,OAAO,GAAGN,iBAAKO,MAAL,CAAY,CAACL,KAAD,EAAQH,GAAR,CAAZ,CAAhB;;AAEA,IAAMS,MAAM,GAAGR,iBAAKO,MAAL,CAAY,CAACZ,GAAD,CAAZ,CAAf;;AAEA,IAAMc,OAAO,GAAGT,iBAAKU,QAAL,CAAc,CAACP,SAAD,EAAYP,KAAZ,CAAd,CAAhB,C,CACA;AACA;;;AAEO,IAAMe,GAAG,GAAGX,iBAAKO,MAAL,CAAY,CAACD,OAAD,EAAUE,MAAV,EAAkBC,OAAlB,CAAZ,CAAZ,C,CACP;AACA",
      "sourceRoot": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\",
      "sourcesContent": [
        "import gulp from \"gulp\";\r\nimport gpug from \"gulp-pug\"\r\nimport del from \"del\";\r\nimport ws from \"gulp-webserver\";\r\nimport image from \"gulp-image\";\r\n\r\n//만약 src를 변경했다고 해보자! \r\n//콘솔창에 yarn add del 을 사용하여 삭제! \r\n\r\nconst routes = {\r\n    pug: {\r\n        watch: \"src/**/*.pug\",\r\n        //src는 index.pug가 되기 위해 src/*.pug라고 지정하였지만,\r\n        //partials 폴더 안의 footer, header.pug가 변화되는 것도 지켜봐야하므로,\r\n        //watch에는 src/**/*/.pug로 지정하였다.\r\n        src: \"src/*.pug\",\r\n        //폴더의 안쪽폴더 파일까지 건드리고 싶다면 src/**/*.pug를 입력할것! //\r\n        dest: \"build\"\r\n        //dest(destination)은 \"build\"다! \r\n    },\r\n    img: {\r\n        src: \"src/img/*\",\r\n        //img 파일에 있는 모든 파일들!\r\n        dest: \"build/img\"\r\n\r\n    }\r\n};\r\n//pug는 src에 있고, 이 안의 .pug로 끝나는 모든 파일들을 컴파일하자! \r\n\r\n\r\nconst pug = () =>\r\n    gulp\r\n    .src(routes.pug.src)\r\n    .pipe(gpug())\r\n    .pipe(gulp.dest(routes.pug.dest));\r\n//gulp의 dest(destination)! 종착점이 dest인 \"build\"인거야! \r\n\r\nconst clean = () => del([\"build/\"]);\r\n//속성이 변할때를 대비해 먼저 초기화하고 build 폴더를 생성한다.\r\n//export const clean = () => del(\"build\")\r\n//clean이라는 변수는 del\"build\"라는 것을 지운다.\r\n\r\nconst webserver = () =>\r\n    gulp.src(\"build\").pipe(ws({\r\n        livereload: true,\r\n        open: true\r\n    }));\r\n//livereload는 파일을 저장하면 자동으로 새로고침해준다.\r\n\r\nconst watch = () => {\r\n    gulp.watch(routes.pug.watch, pug);\r\n    //변수routes안에 pug의 watch가 변수pug를 지켜본다.\r\n    gulp.watch(routes.img.src, img);\r\n}\r\n\r\nconst img = () =>\r\n    gulp\r\n    .src(routes.img.src)\r\n    .pipe(image())\r\n    .pipe(gulp.dest(routes.img.dest));\r\n\r\nconst prepare = gulp.series([clean, img]);\r\n\r\nconst assets = gulp.series([pug]);\r\n\r\nconst postDev = gulp.parallel([webserver, watch]);\r\n//postDev는 웹서버를 실행하고, 파일의 변동사항을 지켜보는 역할을 한다.\r\n//parallel은 두가지를 병행하여 실행하게끔 한다.\r\n\r\nexport const dev = gulp.series([prepare, assets, postDev]);\r\n//먼저 clean을 통해 build 폴더를 지우고 , pug를 적용!            \r\n//만약 clean을 exprot 하지 않는다면, 콘솔이나 package.json에서 사용하지 못한다."
      ]
    },
    "sourceType": "script",
    "mtime": 1613408200506
  }
}