{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\",\"filename\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\\\\gulpfile.babel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Jiyeong\\Desktop\\supergulp",
      "filename": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\gulpfile.babel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jiyeong\\Desktop\\supergulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\gulpfile.babel.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dev = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_gulpSass[\"default\"].compiler = require(\"node-sass\"); //만약 src를 변경했다고 해보자! \n//콘솔창에 yarn add del 을 사용하여 삭제! \n\nvar routes = {\n  pug: {\n    watch: \"src/**/*.pug\",\n    //src는 index.pug가 되기 위해 src/*.pug라고 지정하였지만,\n    //partials 폴더 안의 footer, header.pug가 변화되는 것도 지켜봐야하므로,\n    //watch에는 src/**/*/.pug로 지정하였다.\n    src: \"src/*.pug\",\n    //폴더의 안쪽폴더 파일까지 건드리고 싶다면 src/**/*.pug를 입력할것! //\n    dest: \"build\" //dest(destination)은 \"build\"다! \n\n  },\n  img: {\n    src: \"src/img/*\",\n    //img 파일에 있는 모든 파일들!\n    dest: \"build/img\"\n  },\n  scss: {\n    watch: \"src/scss/**/*.scss\",\n    src: \"src/scss/style.scss\",\n    dest: \"build/css\"\n  }\n}; //pug는 src에 있고, 이 안의 .pug로 끝나는 모든 파일들을 컴파일하자! \n\nvar pug = function pug() {\n  return _gulp[\"default\"].src(routes.pug.src).pipe((0, _gulpPug[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.pug.dest));\n}; //gulp의 dest(destination)! 종착점이 dest인 \"build\"인거야! \n\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"build/\"]);\n}; //속성이 변할때를 대비해 먼저 초기화하고 build 폴더를 생성한다.\n//export const clean = () => del(\"build\")\n//clean이라는 변수는 del\"build\"라는 것을 지운다.\n\n\nvar webserver = function webserver() {\n  return _gulp[\"default\"].src(\"build\").pipe((0, _gulpWebserver[\"default\"])({\n    livereload: true\n  }));\n}; //livereload는 파일을 저장하면 자동으로 새로고침해준다.\n\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch(routes.pug.watch, pug); //변수routes안에 pug의 watch가 변수pug를 지켜본다.\n\n\n  _gulp[\"default\"].watch(routes.img.src, img);\n\n  _gulp[\"default\"].watch(routes.scss.watch, styles);\n};\n\nvar img = function img() {\n  return _gulp[\"default\"].src(routes.img.src).pipe((0, _gulpImage[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.img.dest));\n};\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(routes.scss.src).pipe((0, _gulpSass[\"default\"])().on(\"error\", _gulpSass[\"default\"].logError)).pipe((0, _gulpAutoprefixer[\"default\"])({\n    //여기서 autop는 import에 적었던 것을 뜻한다.\n    browsers: [\"last 2 versions\"]\n  })) //https://github.com/browserslist/browserslist#queries\n  //last 2 versions은 auto-prefixer의 옵션이다.\n  //last 2 versions은 모든 브라우저의 두 단계 아래까지 지원하게끔 한다. \n  .pipe(_gulp[\"default\"].dest(routes.scss.dest));\n};\n\nvar prepare = _gulp[\"default\"].series([clean, img]);\n\nvar assets = _gulp[\"default\"].series([pug, styles]);\n\nvar live = _gulp[\"default\"].parallel([webserver, watch]); //postDev는 웹서버를 실행하고, 파일의 변동사항을 지켜보는 역할을 한다.\n//parallel은 두가지를 병행하여 실행하게끔 한다.\n\n\nvar dev = _gulp[\"default\"].series([prepare, assets, live]); //먼저 clean을 통해 build 폴더를 지우고 , pug를 적용!            \n//만약 clean을 exprot 하지 않는다면, 콘솔이나 package.json에서 사용하지 못한다.\n\n\nexports.dev = dev;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJyb3V0ZXMiLCJwdWciLCJ3YXRjaCIsInNyYyIsImRlc3QiLCJpbWciLCJzY3NzIiwiZ3VscCIsInBpcGUiLCJjbGVhbiIsIndlYnNlcnZlciIsImxpdmVyZWxvYWQiLCJzdHlsZXMiLCJvbiIsImxvZ0Vycm9yIiwiYnJvd3NlcnMiLCJwcmVwYXJlIiwic2VyaWVzIiwiYXNzZXRzIiwibGl2ZSIsInBhcmFsbGVsIiwiZGV2Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEscUJBQUtDLFFBQUwsR0FBZ0JDLE9BQU8sQ0FBQyxXQUFELENBQXZCLEMsQ0FFQTtBQUNBOztBQUVBLElBQU1DLE1BQU0sR0FBRztBQUNYQyxFQUFBQSxHQUFHLEVBQUU7QUFDREMsSUFBQUEsS0FBSyxFQUFFLGNBRE47QUFFRDtBQUNBO0FBQ0E7QUFDQUMsSUFBQUEsR0FBRyxFQUFFLFdBTEo7QUFNRDtBQUNBQyxJQUFBQSxJQUFJLEVBQUUsT0FQTCxDQVFEOztBQVJDLEdBRE07QUFXWEMsRUFBQUEsR0FBRyxFQUFFO0FBQ0RGLElBQUFBLEdBQUcsRUFBRSxXQURKO0FBRUQ7QUFDQUMsSUFBQUEsSUFBSSxFQUFFO0FBSEwsR0FYTTtBQWlCWEUsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZKLElBQUFBLEtBQUssRUFBRSxvQkFETDtBQUVGQyxJQUFBQSxHQUFHLEVBQUUscUJBRkg7QUFHRkMsSUFBQUEsSUFBSSxFQUFFO0FBSEo7QUFqQkssQ0FBZixDLENBdUJBOztBQUdBLElBQU1ILEdBQUcsR0FBRyxTQUFOQSxHQUFNO0FBQUEsU0FDUk0saUJBQ0NKLEdBREQsQ0FDS0gsTUFBTSxDQUFDQyxHQUFQLENBQVdFLEdBRGhCLEVBRUNLLElBRkQsQ0FFTSwwQkFGTixFQUdDQSxJQUhELENBR01ELGlCQUFLSCxJQUFMLENBQVVKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXRyxJQUFyQixDQUhOLENBRFE7QUFBQSxDQUFaLEMsQ0FLQTs7O0FBRUEsSUFBTUssS0FBSyxHQUFHLFNBQVJBLEtBQVE7QUFBQSxTQUFNLHFCQUFJLENBQUMsUUFBRCxDQUFKLENBQU47QUFBQSxDQUFkLEMsQ0FDQTtBQUNBO0FBQ0E7OztBQUVBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZO0FBQUEsU0FBTUgsaUJBQUtKLEdBQUwsQ0FBUyxPQUFULEVBQWtCSyxJQUFsQixDQUF1QiwrQkFBRztBQUM5Q0csSUFBQUEsVUFBVSxFQUFFO0FBRGtDLEdBQUgsQ0FBdkIsQ0FBTjtBQUFBLENBQWxCLEMsQ0FHQTs7O0FBRUEsSUFBTVQsS0FBSyxHQUFHLFNBQVJBLEtBQVEsR0FBTTtBQUNoQkssbUJBQUtMLEtBQUwsQ0FBV0YsTUFBTSxDQUFDQyxHQUFQLENBQVdDLEtBQXRCLEVBQTZCRCxHQUE3QixFQURnQixDQUVoQjs7O0FBQ0FNLG1CQUFLTCxLQUFMLENBQVdGLE1BQU0sQ0FBQ0ssR0FBUCxDQUFXRixHQUF0QixFQUEyQkUsR0FBM0I7O0FBQ0FFLG1CQUFLTCxLQUFMLENBQVdGLE1BQU0sQ0FBQ00sSUFBUCxDQUFZSixLQUF2QixFQUE4QlUsTUFBOUI7QUFDSCxDQUxEOztBQU9BLElBQU1QLEdBQUcsR0FBRyxTQUFOQSxHQUFNO0FBQUEsU0FDUkUsaUJBQ0NKLEdBREQsQ0FDS0gsTUFBTSxDQUFDSyxHQUFQLENBQVdGLEdBRGhCLEVBRUNLLElBRkQsQ0FFTSw0QkFGTixFQUdDQSxJQUhELENBR01ELGlCQUFLSCxJQUFMLENBQVVKLE1BQU0sQ0FBQ0ssR0FBUCxDQUFXRCxJQUFyQixDQUhOLENBRFE7QUFBQSxDQUFaOztBQU1BLElBQU1RLE1BQU0sR0FBRyxTQUFUQSxNQUFTO0FBQUEsU0FDWEwsaUJBQ0NKLEdBREQsQ0FDS0gsTUFBTSxDQUFDTSxJQUFQLENBQVlILEdBRGpCLEVBRUNLLElBRkQsQ0FFTSw0QkFBT0ssRUFBUCxDQUFVLE9BQVYsRUFBbUJoQixxQkFBS2lCLFFBQXhCLENBRk4sRUFHQ04sSUFIRCxDQUdNLGtDQUFNO0FBQUU7QUFDVk8sSUFBQUEsUUFBUSxFQUFFLENBQUMsaUJBQUQ7QUFERixHQUFOLENBSE4sRUFNQTtBQUNBO0FBQ0E7QUFSQSxHQVVDUCxJQVZELENBVU1ELGlCQUFLSCxJQUFMLENBQVVKLE1BQU0sQ0FBQ00sSUFBUCxDQUFZRixJQUF0QixDQVZOLENBRFc7QUFBQSxDQUFmOztBQWFBLElBQU1ZLE9BQU8sR0FBR1QsaUJBQUtVLE1BQUwsQ0FBWSxDQUFDUixLQUFELEVBQVFKLEdBQVIsQ0FBWixDQUFoQjs7QUFFQSxJQUFNYSxNQUFNLEdBQUdYLGlCQUFLVSxNQUFMLENBQVksQ0FBQ2hCLEdBQUQsRUFBTVcsTUFBTixDQUFaLENBQWY7O0FBRUEsSUFBTU8sSUFBSSxHQUFHWixpQkFBS2EsUUFBTCxDQUFjLENBQUNWLFNBQUQsRUFBWVIsS0FBWixDQUFkLENBQWIsQyxDQUNBO0FBQ0E7OztBQUVPLElBQU1tQixHQUFHLEdBQUdkLGlCQUFLVSxNQUFMLENBQVksQ0FBQ0QsT0FBRCxFQUFVRSxNQUFWLEVBQWtCQyxJQUFsQixDQUFaLENBQVosQyxDQUVQO0FBQ0EiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxKaXllb25nXFxEZXNrdG9wXFxzdXBlcmd1bHBcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gXCJndWxwXCI7XHJcbmltcG9ydCBncHVnIGZyb20gXCJndWxwLXB1Z1wiXHJcbmltcG9ydCBkZWwgZnJvbSBcImRlbFwiO1xyXG5pbXBvcnQgd3MgZnJvbSBcImd1bHAtd2Vic2VydmVyXCI7XHJcbmltcG9ydCBpbWFnZSBmcm9tIFwiZ3VscC1pbWFnZVwiO1xyXG5pbXBvcnQgc2FzcyBmcm9tIFwiZ3VscC1zYXNzXCI7XHJcbmltcG9ydCBhdXRvcCBmcm9tIFwiZ3VscC1hdXRvcHJlZml4ZXJcIlxyXG5cclxuc2Fzcy5jb21waWxlciA9IHJlcXVpcmUoXCJub2RlLXNhc3NcIik7XHJcblxyXG4vL+unjOyVvSBzcmPrpbwg67OA6rK97ZaI64uk6rOgIO2VtOuztOyekCEgXHJcbi8v7L2Y7IaU7LC97JeQIHlhcm4gYWRkIGRlbCDsnYQg7IKs7Jqp7ZWY7JesIOyCreygnCEgXHJcblxyXG5jb25zdCByb3V0ZXMgPSB7XHJcbiAgICBwdWc6IHtcclxuICAgICAgICB3YXRjaDogXCJzcmMvKiovKi5wdWdcIixcclxuICAgICAgICAvL3NyY+uKlCBpbmRleC5wdWfqsIAg65CY6riwIOychO2VtCBzcmMvKi5wdWfrnbzqs6Ag7KeA7KCV7ZWY7JiA7KeA66eMLFxyXG4gICAgICAgIC8vcGFydGlhbHMg7Y+0642UIOyViOydmCBmb290ZXIsIGhlYWRlci5wdWfqsIAg67OA7ZmU65CY64qUIOqyg+uPhCDsp4DsvJzrtJDslbztlZjrr4DroZwsXHJcbiAgICAgICAgLy93YXRjaOyXkOuKlCBzcmMvKiovKi8ucHVn66GcIOyngOygle2VmOyYgOuLpC5cclxuICAgICAgICBzcmM6IFwic3JjLyoucHVnXCIsXHJcbiAgICAgICAgLy/tj7TrjZTsnZgg7JWI7Kq97Y+0642UIO2MjOydvOq5jOyngCDqsbTrk5zrpqzqs6Ag7Iu264uk66m0IHNyYy8qKi8qLnB1Z+ulvCDsnoXroKXtlaDqsoMhIC8vXHJcbiAgICAgICAgZGVzdDogXCJidWlsZFwiXHJcbiAgICAgICAgLy9kZXN0KGRlc3RpbmF0aW9uKeydgCBcImJ1aWxkXCLri6QhIFxyXG4gICAgfSxcclxuICAgIGltZzoge1xyXG4gICAgICAgIHNyYzogXCJzcmMvaW1nLypcIixcclxuICAgICAgICAvL2ltZyDtjIzsnbzsl5Ag7J6I64qUIOuqqOuToCDtjIzsnbzrk6QhXHJcbiAgICAgICAgZGVzdDogXCJidWlsZC9pbWdcIlxyXG5cclxuICAgIH0sXHJcbiAgICBzY3NzOiB7XHJcbiAgICAgICAgd2F0Y2g6IFwic3JjL3Njc3MvKiovKi5zY3NzXCIsXHJcbiAgICAgICAgc3JjOiBcInNyYy9zY3NzL3N0eWxlLnNjc3NcIixcclxuICAgICAgICBkZXN0OiBcImJ1aWxkL2Nzc1wiXHJcbiAgICB9XHJcbn07XHJcbi8vcHVn64qUIHNyY+yXkCDsnojqs6AsIOydtCDslYjsnZggLnB1Z+uhnCDrgZ3rgpjripQg66qo65OgIO2MjOydvOuTpOydhCDsu7TtjIzsnbztlZjsnpAhIFxyXG5cclxuXHJcbmNvbnN0IHB1ZyA9ICgpID0+XHJcbiAgICBndWxwXHJcbiAgICAuc3JjKHJvdXRlcy5wdWcuc3JjKVxyXG4gICAgLnBpcGUoZ3B1ZygpKVxyXG4gICAgLnBpcGUoZ3VscC5kZXN0KHJvdXRlcy5wdWcuZGVzdCkpO1xyXG4vL2d1bHDsnZggZGVzdChkZXN0aW5hdGlvbikhIOyiheywqeygkOydtCBkZXN07J24IFwiYnVpbGRcIuyduOqxsOyVvCEgXHJcblxyXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbXCJidWlsZC9cIl0pO1xyXG4vL+yGjeyEseydtCDrs4DtlaDrlYzrpbwg64yA67mE7ZW0IOuovOyggCDstIjquLDtmZTtlZjqs6AgYnVpbGQg7Y+0642U66W8IOyDneyEse2VnOuLpC5cclxuLy9leHBvcnQgY29uc3QgY2xlYW4gPSAoKSA9PiBkZWwoXCJidWlsZFwiKVxyXG4vL2NsZWFu7J20652864qUIOuzgOyImOuKlCBkZWxcImJ1aWxkXCLrnbzripQg6rKD7J2EIOyngOyatOuLpC5cclxuXHJcbmNvbnN0IHdlYnNlcnZlciA9ICgpID0+IGd1bHAuc3JjKFwiYnVpbGRcIikucGlwZSh3cyh7XHJcbiAgICBsaXZlcmVsb2FkOiB0cnVlXHJcbn0pKTtcclxuLy9saXZlcmVsb2Fk64qUIO2MjOydvOydhCDsoIDsnqXtlZjrqbQg7J6Q64+Z7Jy866GcIOyDiOuhnOqzoOy5qO2VtOykgOuLpC5cclxuXHJcbmNvbnN0IHdhdGNoID0gKCkgPT4ge1xyXG4gICAgZ3VscC53YXRjaChyb3V0ZXMucHVnLndhdGNoLCBwdWcpO1xyXG4gICAgLy/rs4DsiJhyb3V0ZXPslYjsl5AgcHVn7J2YIHdhdGNo6rCAIOuzgOyImHB1Z+ulvCDsp4DsvJzrs7jri6QuXHJcbiAgICBndWxwLndhdGNoKHJvdXRlcy5pbWcuc3JjLCBpbWcpO1xyXG4gICAgZ3VscC53YXRjaChyb3V0ZXMuc2Nzcy53YXRjaCwgc3R5bGVzKTtcclxufVxyXG5cclxuY29uc3QgaW1nID0gKCkgPT5cclxuICAgIGd1bHBcclxuICAgIC5zcmMocm91dGVzLmltZy5zcmMpXHJcbiAgICAucGlwZShpbWFnZSgpKVxyXG4gICAgLnBpcGUoZ3VscC5kZXN0KHJvdXRlcy5pbWcuZGVzdCkpO1xyXG5cclxuY29uc3Qgc3R5bGVzID0gKCkgPT5cclxuICAgIGd1bHBcclxuICAgIC5zcmMocm91dGVzLnNjc3Muc3JjKVxyXG4gICAgLnBpcGUoc2FzcygpLm9uKFwiZXJyb3JcIiwgc2Fzcy5sb2dFcnJvcikpXHJcbiAgICAucGlwZShhdXRvcCh7IC8v7Jes6riw7IScIGF1dG9w64qUIGltcG9ydOyXkCDsoIHsl4jrjZgg6rKD7J2EIOucu+2VnOuLpC5cclxuICAgICAgICBicm93c2VyczogW1wibGFzdCAyIHZlcnNpb25zXCJdXHJcbiAgICB9KSlcclxuICAgIC8vaHR0cHM6Ly9naXRodWIuY29tL2Jyb3dzZXJzbGlzdC9icm93c2Vyc2xpc3QjcXVlcmllc1xyXG4gICAgLy9sYXN0IDIgdmVyc2lvbnPsnYAgYXV0by1wcmVmaXhlcuydmCDsmLXshZjsnbTri6QuXHJcbiAgICAvL2xhc3QgMiB2ZXJzaW9uc+ydgCDrqqjrk6Ag67iM65287Jqw7KCA7J2YIOuRkCDri6jqs4Qg7JWE656Y6rmM7KeAIOyngOybkO2VmOqyjOuBlCDtlZzri6QuIFxyXG5cclxuICAgIC5waXBlKGd1bHAuZGVzdChyb3V0ZXMuc2Nzcy5kZXN0KSk7XHJcblxyXG5jb25zdCBwcmVwYXJlID0gZ3VscC5zZXJpZXMoW2NsZWFuLCBpbWddKTtcclxuXHJcbmNvbnN0IGFzc2V0cyA9IGd1bHAuc2VyaWVzKFtwdWcsIHN0eWxlc10pO1xyXG5cclxuY29uc3QgbGl2ZSA9IGd1bHAucGFyYWxsZWwoW3dlYnNlcnZlciwgd2F0Y2hdKTtcclxuLy9wb3N0RGV264qUIOybueyEnOuyhOulvCDsi6TtlontlZjqs6AsIO2MjOydvOydmCDrs4Drj5nsgqztla3snYQg7KeA7Lyc67O064qUIOyXre2VoOydhCDtlZzri6QuXHJcbi8vcGFyYWxsZWzsnYAg65GQ6rCA7KeA66W8IOuzke2Wie2VmOyXrCDsi6TtlontlZjqsozrgZQg7ZWc64ukLlxyXG5cclxuZXhwb3J0IGNvbnN0IGRldiA9IGd1bHAuc2VyaWVzKFtwcmVwYXJlLCBhc3NldHMsIGxpdmVdKTtcclxuXHJcbi8v66i87KCAIGNsZWFu7J2EIO2Gte2VtCBidWlsZCDtj7TrjZTrpbwg7KeA7Jqw6rOgICwgcHVn66W8IOyggeyaqSEgICAgICAgICAgICBcclxuLy/rp4zslb0gY2xlYW7snYQgZXhwcm90IO2VmOyngCDslYrripTri6TrqbQsIOy9mOyGlOydtOuCmCBwYWNrYWdlLmpzb27sl5DshJwg7IKs7Jqp7ZWY7KeAIOuqu+2VnOuLpC4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "scss",
        "gulp",
        "pipe",
        "clean",
        "webserver",
        "livereload",
        "styles",
        "on",
        "logError",
        "browsers",
        "prepare",
        "series",
        "assets",
        "live",
        "parallel",
        "dev"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\",
      "sourcesContent": [
        "import gulp from \"gulp\";\r\nimport gpug from \"gulp-pug\"\r\nimport del from \"del\";\r\nimport ws from \"gulp-webserver\";\r\nimport image from \"gulp-image\";\r\nimport sass from \"gulp-sass\";\r\nimport autop from \"gulp-autoprefixer\"\r\n\r\nsass.compiler = require(\"node-sass\");\r\n\r\n//만약 src를 변경했다고 해보자! \r\n//콘솔창에 yarn add del 을 사용하여 삭제! \r\n\r\nconst routes = {\r\n    pug: {\r\n        watch: \"src/**/*.pug\",\r\n        //src는 index.pug가 되기 위해 src/*.pug라고 지정하였지만,\r\n        //partials 폴더 안의 footer, header.pug가 변화되는 것도 지켜봐야하므로,\r\n        //watch에는 src/**/*/.pug로 지정하였다.\r\n        src: \"src/*.pug\",\r\n        //폴더의 안쪽폴더 파일까지 건드리고 싶다면 src/**/*.pug를 입력할것! //\r\n        dest: \"build\"\r\n        //dest(destination)은 \"build\"다! \r\n    },\r\n    img: {\r\n        src: \"src/img/*\",\r\n        //img 파일에 있는 모든 파일들!\r\n        dest: \"build/img\"\r\n\r\n    },\r\n    scss: {\r\n        watch: \"src/scss/**/*.scss\",\r\n        src: \"src/scss/style.scss\",\r\n        dest: \"build/css\"\r\n    }\r\n};\r\n//pug는 src에 있고, 이 안의 .pug로 끝나는 모든 파일들을 컴파일하자! \r\n\r\n\r\nconst pug = () =>\r\n    gulp\r\n    .src(routes.pug.src)\r\n    .pipe(gpug())\r\n    .pipe(gulp.dest(routes.pug.dest));\r\n//gulp의 dest(destination)! 종착점이 dest인 \"build\"인거야! \r\n\r\nconst clean = () => del([\"build/\"]);\r\n//속성이 변할때를 대비해 먼저 초기화하고 build 폴더를 생성한다.\r\n//export const clean = () => del(\"build\")\r\n//clean이라는 변수는 del\"build\"라는 것을 지운다.\r\n\r\nconst webserver = () => gulp.src(\"build\").pipe(ws({\r\n    livereload: true\r\n}));\r\n//livereload는 파일을 저장하면 자동으로 새로고침해준다.\r\n\r\nconst watch = () => {\r\n    gulp.watch(routes.pug.watch, pug);\r\n    //변수routes안에 pug의 watch가 변수pug를 지켜본다.\r\n    gulp.watch(routes.img.src, img);\r\n    gulp.watch(routes.scss.watch, styles);\r\n}\r\n\r\nconst img = () =>\r\n    gulp\r\n    .src(routes.img.src)\r\n    .pipe(image())\r\n    .pipe(gulp.dest(routes.img.dest));\r\n\r\nconst styles = () =>\r\n    gulp\r\n    .src(routes.scss.src)\r\n    .pipe(sass().on(\"error\", sass.logError))\r\n    .pipe(autop({ //여기서 autop는 import에 적었던 것을 뜻한다.\r\n        browsers: [\"last 2 versions\"]\r\n    }))\r\n    //https://github.com/browserslist/browserslist#queries\r\n    //last 2 versions은 auto-prefixer의 옵션이다.\r\n    //last 2 versions은 모든 브라우저의 두 단계 아래까지 지원하게끔 한다. \r\n\r\n    .pipe(gulp.dest(routes.scss.dest));\r\n\r\nconst prepare = gulp.series([clean, img]);\r\n\r\nconst assets = gulp.series([pug, styles]);\r\n\r\nconst live = gulp.parallel([webserver, watch]);\r\n//postDev는 웹서버를 실행하고, 파일의 변동사항을 지켜보는 역할을 한다.\r\n//parallel은 두가지를 병행하여 실행하게끔 한다.\r\n\r\nexport const dev = gulp.series([prepare, assets, live]);\r\n\r\n//먼저 clean을 통해 build 폴더를 지우고 , pug를 적용!            \r\n//만약 clean을 exprot 하지 않는다면, 콘솔이나 package.json에서 사용하지 못한다."
      ]
    },
    "sourceType": "script",
    "mtime": 1613537879367
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\",\"filename\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\\\\gulpfile.babel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jiyeong\\\\Desktop\\\\supergulp\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Jiyeong\\Desktop\\supergulp",
      "filename": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\gulpfile.babel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jiyeong\\Desktop\\supergulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\gulpfile.babel.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deploy = exports.dev = exports.build = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _gulpBro = _interopRequireDefault(require(\"gulp-bro\"));\n\nvar _babelify = _interopRequireDefault(require(\"babelify\"));\n\nvar _gulpGhPages = _interopRequireDefault(require(\"gulp-gh-pages\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_gulpSass.default.compiler = require(\"node-sass\"); //만약 src를 변경했다고 해보자! \n//콘솔창에 yarn add del 을 사용하여 삭제! \n\nvar routes = {\n  pug: {\n    watch: \"src/**/*.pug\",\n    //src는 index.pug가 되기 위해 src/*.pug라고 지정하였지만,\n    //partials 폴더 안의 footer, header.pug가 변화되는 것도 지켜봐야하므로,\n    //watch에는 src/**/*/.pug로 지정하였다.\n    src: \"src/*.pug\",\n    //폴더의 안쪽폴더 파일까지 건드리고 싶다면 src/**/*.pug를 입력할것! //\n    dest: \"build\" //dest(destination)은 \"build\"다! \n\n  },\n  img: {\n    src: \"src/img/*\",\n    //img 파일에 있는 모든 파일들!\n    dest: \"build/img\"\n  },\n  scss: {\n    watch: \"src/scss/**/*.scss\",\n    src: \"src/scss/style.scss\",\n    dest: \"build/css\"\n  },\n  js: {\n    watch: \"src/js/**/*.js\",\n    //모든 js파일을 감시한다.\n    src: \"src/js/main.js\",\n    dest: \"build/js\"\n  }\n}; //pug는 src에 있고, 이 안의 .pug로 끝나는 모든 파일들을 컴파일하자! \n\nvar pug = function pug() {\n  return _gulp.default.src(routes.pug.src).pipe((0, _gulpPug.default)()).pipe(_gulp.default.dest(routes.pug.dest));\n}; //gulp의 dest(destination)! 종착점이 dest인 \"build\"인거야! \n\n\nvar clean = function clean() {\n  return (0, _del.default)([\"build/\", \".publish\"]);\n}; //속성이 변할때를 대비해 먼저 초기화하고 build 폴더를 생성한다.\n//export const clean = () => del(\"build\")\n//clean이라는 변수는 del\"build\"라는 것을 지운다.\n\n\nvar webserver = function webserver() {\n  return _gulp.default.src(\"build\").pipe((0, _gulpWebserver.default)({\n    livereload: true\n  }));\n}; //livereload는 파일을 저장하면 자동으로 새로고침해준다.\n\n\nvar watch = function watch() {\n  _gulp.default.watch(routes.pug.watch, pug); //변수routes안에 pug의 watch가 변수pug를 지켜본다.\n\n\n  _gulp.default.watch(routes.img.src, img);\n\n  _gulp.default.watch(routes.scss.watch, styles, js);\n\n  _gulp.default.watch(routes.js.watch, js);\n};\n\nvar img = function img() {\n  return _gulp.default.src(routes.img.src).pipe((0, _gulpImage.default)()).pipe(_gulp.default.dest(routes.img.dest));\n};\n\nvar styles = function styles() {\n  return _gulp.default.src(routes.scss.src).pipe((0, _gulpSass.default)().on(\"error\", _gulpSass.default.logError)).pipe((0, _gulpAutoprefixer.default)()) //https://github.com/browserslist/browserslist#queries\n  //옵션이 먹지 않아서, package.json에 옵션 추가하였다! \n  //last 2 versions은 auto-prefixer의 옵션이다.\n  //last 2 versions은 모든 브라우저의 두 단계 아래까지 지원하게끔 한다.\n  .pipe((0, _gulpCsso.default)()) //여기에도 옵션을 추가할 수 있다. \n  .pipe(_gulp.default.dest(routes.scss.dest));\n};\n\nvar js = function js() {\n  return _gulp.default.src(routes.js.src).pipe((0, _gulpBro.default)({\n    transform: [_babelify.default.configure({\n      presets: [\"@babel/preset-env\"]\n    }), [\"uglifyify\", {\n      global: true\n    }]]\n  })).pipe(_gulp.default.dest(routes.js.dest));\n};\n\nvar gh = function gh() {\n  return _gulp.default.src(\"build/**/*\").pipe((0, _gulpGhPages.default)());\n}; //모든 폴더와 모든 파일을 적용! \n\n\nvar prepare = _gulp.default.series([clean, img]);\n\nvar assets = _gulp.default.series([pug, styles, js]);\n\nvar live = _gulp.default.parallel([webserver, watch]); //postDev는 웹서버를 실행하고, 파일의 변동사항을 지켜보는 역할을 한다.\n//parallel은 두가지를 병행하여 실행하게끔 한다.\n\n\nvar build = _gulp.default.series([prepare, assets]);\n\nexports.build = build;\n\nvar dev = _gulp.default.series([build, live]);\n\nexports.dev = dev;\n\nvar deploy = _gulp.default.series([build, gh, clean]); //먼저 clean을 통해 build 폴더를 지우고 , pug를 적용!            \n//만약 clean을 exprot 하지 않는다면, 콘솔이나 package.json에서 사용하지 못한다.\n//buld는 prepare, assets를 불러오고, \n//dev는 build를 하고, live로 이들을 라이브 서버에서 보여준다.\n//deploy는 assets을 build하고, 그것들을 배포한다. \n\n\nexports.deploy = deploy;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "scss",
        "js",
        "gulp",
        "pipe",
        "clean",
        "webserver",
        "livereload",
        "styles",
        "on",
        "logError",
        "transform",
        "babelify",
        "configure",
        "presets",
        "global",
        "gh",
        "prepare",
        "series",
        "assets",
        "live",
        "parallel",
        "build",
        "dev",
        "deploy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Jiyeong\\Desktop\\supergulp\\",
      "sourcesContent": [
        "import gulp from \"gulp\";\r\nimport gpug from \"gulp-pug\"\r\nimport del from \"del\";\r\nimport ws from \"gulp-webserver\";\r\nimport image from \"gulp-image\";\r\nimport sass from \"gulp-sass\";\r\nimport autoprefixer from \"gulp-autoprefixer\";\r\nimport miniCSS from \"gulp-csso\";\r\nimport bro from \"gulp-bro\";\r\nimport babelify from \"babelify\";\r\nimport ghPages from \"gulp-gh-pages\"\r\n\r\nsass.compiler = require(\"node-sass\");\r\n\r\n//만약 src를 변경했다고 해보자! \r\n//콘솔창에 yarn add del 을 사용하여 삭제! \r\n\r\nconst routes = {\r\n    pug: {\r\n        watch: \"src/**/*.pug\",\r\n        //src는 index.pug가 되기 위해 src/*.pug라고 지정하였지만,\r\n        //partials 폴더 안의 footer, header.pug가 변화되는 것도 지켜봐야하므로,\r\n        //watch에는 src/**/*/.pug로 지정하였다.\r\n        src: \"src/*.pug\",\r\n        //폴더의 안쪽폴더 파일까지 건드리고 싶다면 src/**/*.pug를 입력할것! //\r\n        dest: \"build\"\r\n        //dest(destination)은 \"build\"다! \r\n    },\r\n    img: {\r\n        src: \"src/img/*\",\r\n        //img 파일에 있는 모든 파일들!\r\n        dest: \"build/img\"\r\n\r\n    },\r\n    scss: {\r\n        watch: \"src/scss/**/*.scss\",\r\n        src: \"src/scss/style.scss\",\r\n        dest: \"build/css\"\r\n    },\r\n    js: {\r\n        watch: \"src/js/**/*.js\", //모든 js파일을 감시한다.\r\n        src: \"src/js/main.js\",\r\n        dest: \"build/js\"\r\n    }\r\n};\r\n//pug는 src에 있고, 이 안의 .pug로 끝나는 모든 파일들을 컴파일하자! \r\n\r\n\r\nconst pug = () =>\r\n    gulp\r\n    .src(routes.pug.src)\r\n    .pipe(gpug())\r\n    .pipe(gulp.dest(routes.pug.dest));\r\n//gulp의 dest(destination)! 종착점이 dest인 \"build\"인거야! \r\n\r\nconst clean = () => del([\"build/\", \".publish\"]);\r\n//속성이 변할때를 대비해 먼저 초기화하고 build 폴더를 생성한다.\r\n//export const clean = () => del(\"build\")\r\n//clean이라는 변수는 del\"build\"라는 것을 지운다.\r\n\r\nconst webserver = () => gulp.src(\"build\").pipe(ws({\r\n    livereload: true\r\n}));\r\n//livereload는 파일을 저장하면 자동으로 새로고침해준다.\r\n\r\nconst watch = () => {\r\n    gulp.watch(routes.pug.watch, pug);\r\n    //변수routes안에 pug의 watch가 변수pug를 지켜본다.\r\n    gulp.watch(routes.img.src, img);\r\n    gulp.watch(routes.scss.watch, styles, js);\r\n    gulp.watch(routes.js.watch, js);\r\n}\r\n\r\nconst img = () =>\r\n    gulp\r\n    .src(routes.img.src)\r\n    .pipe(image())\r\n    .pipe(gulp.dest(routes.img.dest));\r\n\r\nconst styles = () =>\r\n    gulp\r\n    .src(routes.scss.src)\r\n    .pipe(sass().on(\"error\", sass.logError))\r\n    .pipe(autoprefixer())\r\n    //https://github.com/browserslist/browserslist#queries\r\n    //옵션이 먹지 않아서, package.json에 옵션 추가하였다! \r\n    //last 2 versions은 auto-prefixer의 옵션이다.\r\n    //last 2 versions은 모든 브라우저의 두 단계 아래까지 지원하게끔 한다.\r\n    .pipe(miniCSS()) //여기에도 옵션을 추가할 수 있다. \r\n    .pipe(gulp.dest(routes.scss.dest));\r\n\r\nconst js = () =>\r\n    gulp\r\n    .src(routes.js.src)\r\n    .pipe(\r\n        bro({\r\n            transform: [\r\n                babelify.configure({\r\n                    presets: [\"@babel/preset-env\"]\r\n                }),\r\n                [\"uglifyify\", {\r\n                    global: true\r\n                }]\r\n            ]\r\n        })\r\n    )\r\n    .pipe(gulp.dest(routes.js.dest));\r\n    \r\n    const gh = () =>gulp.src(\"build/**/*\").pipe(ghPages());\r\n    //모든 폴더와 모든 파일을 적용! \r\n\r\n\r\nconst prepare = gulp.series([clean, img]);\r\n\r\nconst assets = gulp.series([pug, styles, js]);\r\n\r\nconst live = gulp.parallel([webserver, watch]);\r\n//postDev는 웹서버를 실행하고, 파일의 변동사항을 지켜보는 역할을 한다.\r\n//parallel은 두가지를 병행하여 실행하게끔 한다.\r\n\r\nexport const build = gulp.series([prepare, assets]);\r\nexport const dev = gulp.series([build, live]);\r\nexport const deploy = gulp.series([build, gh, clean]);\r\n\r\n//먼저 clean을 통해 build 폴더를 지우고 , pug를 적용!            \r\n//만약 clean을 exprot 하지 않는다면, 콘솔이나 package.json에서 사용하지 못한다.\r\n//buld는 prepare, assets를 불러오고, \r\n//dev는 build를 하고, live로 이들을 라이브 서버에서 보여준다.\r\n//deploy는 assets을 build하고, 그것들을 배포한다. "
      ]
    },
    "sourceType": "script",
    "mtime": 1613586800278
  }
}